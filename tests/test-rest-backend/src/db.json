{
  "c3150b218044a04aa8b7e0fef9a9d4b7": "def assert_cpp_files_similar(cpp_file1: str, cpp_file2: str):\n    \"\"\"\n     Checks if 2 cpp files are similar (still might have different formatting)\n     Uses LibClang parser\n    :param cpp_file1:\n    :param cpp_file2:\n    :return:\n    \"\"\"\n    print(cpp_file1)\n    index = Index.create()\n    ast1: TranslationUnit = index.parse(cpp_file1)\n    ast2: TranslationUnit = index.parse(cpp_file2)\n    assert ast1 is not None\n    assert ast2 is not None\n    tokens1 = ast1.cursor.get_tokens()\n    tokens2 = ast2.cursor.get_tokens()\n    token1: Token = next(tokens1, None)\n    token2: Token = next(tokens2, None)\n\n    while token1 is not None and token2 is not None:\n        # both lists of tokens and pairwise similar\n        assert token1.kind == token2.kind\n        assert token1.spelling == token2.spelling\n\n        try:\n            token1 = next(tokens1)\n            token2 = next(tokens2)\n        except StopIteration: # line 39\n            break"
}